{"version":3,"sources":["background.jpg","Header.js","Body.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newHeaderColor","clicked","oldHeaderColor","changeColor","bind","assertThisInitialized","color","_this$state","setState","_this2","_this$state2","react_default","a","createElement","Fragment","renderprops","items","from","height","background","enter","show","styles","HeaderBackground","HeaderContainer","H1","Nav","Li","A","href","onClick","Component","styled","div","_templateObject","_templateObject2","h1","_templateObject3","nav","_templateObject4","li","_templateObject5","_templateObject6","Body","position","opacity","to","BodyContainer","Body_H1","P","Body_templateObject","Body_templateObject2","Body_templateObject3","Footer","FooterContainer","Footer_Li","Footer_A","Footer_templateObject","Footer_templateObject2","Footer_templateObject3","App","AppContainer","Header_Header","Body_Body","Footer_Footer","Background","src","Overlay","App_templateObject","img","App_templateObject2","App_templateObject3","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,u5CCGnBC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,eAAgB,gBAChBC,QAAS,EACTC,eAAgB,iBAElBV,EAAKW,YAAcX,EAAKW,YAAYC,KAAjBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAPFA,2EAUPc,GAAO,IAAAC,EACmBZ,KAAKI,MAAjCC,EADSO,EACTP,eAAgBC,EADPM,EACON,QACpBK,IAAUN,GACZL,KAAKa,SAAS,CACZR,eAAgBM,EAChBJ,eAAgBF,EAChBC,QAASA,EAAQ,qCAKd,IAAAQ,EAAAd,KAAAe,EAC6Cf,KAAKI,MAAjDG,EADDQ,EACCR,eAAgBF,EADjBU,EACiBV,eAAgBC,EADjCS,EACiCT,QACxC,OACEU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACE,EAAA,WAAD,CACEC,MAAOf,EACPgB,KAAM,CAAEC,OAAQ,KAAMC,WAAYjB,GAClCkB,MAAO,CAAEF,OAAQ,OAAQC,WAAYnB,IAGlC,SAAAqB,GAAI,OAAIA,GAAS,SAAAC,GAAM,OACpBX,EAAAC,EAAAC,cAACU,EAAD,CACEL,OAAQI,EAAOJ,OACfC,WAAYG,EAAOH,gBAI3BR,EAAAC,EAAAC,cAACW,EAAD,CACExB,eAAgBA,GACtBW,EAAAC,EAAAC,cAACY,EAAD,CAAInB,MAAON,GAAX,MACAW,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAD,CACErB,MAAM,WAEAK,EAAAC,EAAAC,cAACe,EAAD,CAAGC,KAAK,SAASC,QAAS,kBAAMrB,EAAKN,YAAY,aAAjD,UAERQ,EAAAC,EAAAC,cAACc,EAAD,CACErB,MAAM,WACJK,EAAAC,EAAAC,cAACe,EAAD,CAAGC,KAAK,YAAYC,QAAS,kBAAMrB,EAAKN,YAAY,aAApD,aAEFQ,EAAAC,EAAAC,cAACc,EAAD,CACErB,MAAM,WACJK,EAAAC,EAAAC,cAACe,EAAD,CAAGC,KAAK,WAAWC,QAAS,kBAAMrB,EAAKN,YAAY,aAAnD,YAEJQ,EAAAC,EAAAC,cAACc,EAAD,CACErB,MAAM,WACJK,EAAAC,EAAAC,cAACe,EAAD,CAAGC,KAAK,WAAWC,QAAS,kBAAMrB,EAAKN,YAAY,aAAnD,sBA1DwB4B,aAoE9BP,EAAkBQ,IAAOC,IAAVC,IAOV,SAAA3C,GAAK,MAA6B,KAAzBA,EAAMS,eAAwB,EAAI,SAIhDuB,EAAmBS,IAAOC,IAAVE,IAIV,SAAA5C,GAAK,OAAIA,EAAM2B,QACX,SAAA3B,GAAK,OAAIA,EAAM4B,aAGzBM,EAAKO,IAAOI,GAAVC,IAGQ,SAAA9C,GAAK,OAAIA,EAAM4B,aAMzBO,EAAMM,IAAOM,IAAVC,KAKHZ,EAAKK,IAAOQ,GAAVC,KASFb,EAAII,IAAOpB,EAAV8B,+mBC7GcC,mLAEjB,OAEIhC,EAAAC,EAAAC,cAACE,EAAA,OAAD,CACEE,KAAM,CAAE2B,SAAU,SAAUC,QAAS,GACrCC,GAAI,CAACF,SAAU,IAAKC,QAAS,IAE5B,SAAAtD,GAAK,OACNoB,EAAAC,EAAAC,cAACkC,EAAD,CACEH,SAAUrD,EAAMqD,SAChBC,QAAStD,EAAMsD,SAEflC,EAAAC,EAAAC,cAACmC,EAAD,0BACArC,EAAAC,EAAAC,cAACoC,EAAD,6CAdsBlB,aAuB5BgB,EAAgBf,IAAOC,IAAViB,IACH,SAAA3D,GAAK,OAAIA,EAAMqD,UAClB,SAAArD,GAAK,OAAIA,EAAMsD,UAQtBpB,EAAKO,IAAOI,GAAVe,KAMFF,EAAIjB,IAAO3C,EAAV+D,sbCxCcC,mLAEjB,OACE1C,EAAAC,EAAAC,cAACyC,EAAD,KACE3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0C,EAAD,CAAIjD,MAAM,WAAUK,EAAAC,EAAAC,cAAC2C,EAAD,CAAG3B,KAAK,uCAAR,aACpBlB,EAAAC,EAAAC,cAAC0C,EAAD,CAAIjD,MAAM,WAAUK,EAAAC,EAAAC,cAAC2C,EAAD,CAAG3B,KAAK,gCAAR,WACpBlB,EAAAC,EAAAC,cAAC0C,EAAD,CAAIjD,MAAM,WAAUK,EAAAC,EAAAC,cAAC2C,EAAD,CAAG3B,KAAK,0CAAR,uBAPME,aAc9BuB,EAAkBtB,IAAOC,IAAVwB,KAQf9B,EAAKK,IAAOQ,GAAVkB,IACQ,SAAAnE,GAAK,OAAIA,EAAMe,QAKzBsB,EAAII,IAAOpB,EAAV+C,qlBCzBDC,mLAEF,OACEjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,CAAYC,IAAK/C,MACjBR,EAAAC,EAAAC,cAACsD,EAAD,eATQpC,aAgBZ8B,EAAe7B,IAAOC,IAAVmC,KAQZH,EAAajC,IAAOqC,IAAVC,KAQVH,EAAUnC,IAAOC,IAAVsC,KAQEX,IClCKY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.bea3db6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.307e25de.jpg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Spring, animated, Transition } from 'react-spring/renderprops';\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newHeaderColor: 'rgba(0,0,0,0)',\n      clicked: 0,\n      oldHeaderColor: 'rgba(0,0,0,0)',\n    }\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  changeColor(color) {\n    const { newHeaderColor, clicked } = this.state;\n    if (color !== newHeaderColor) {\n      this.setState({\n        newHeaderColor: color,\n        oldHeaderColor: newHeaderColor,\n        clicked: clicked+1,\n      })\n    }\n  }\n\n  render() {\n    const { oldHeaderColor, newHeaderColor, clicked } = this.state;\n    return (\n      <>\n      <Transition\n        items={clicked}\n        from={{ height: '0%', background: oldHeaderColor}}\n        enter={{ height: '100%', background: newHeaderColor }}\n          \n      >\n          {show => show && (styles => (\n              <HeaderBackground\n                height={styles.height }\n                background={styles.background } \n              />\n        ))}\n      </Transition>\n        <HeaderContainer\n          newHeaderColor={newHeaderColor}>\n    <H1 color={newHeaderColor}>JP</H1>\n    <Nav>\n      <Li\n        color='#FFCC54'\n        >\n              <A href='#About' onClick={() => this.changeColor('#FFCC54')}>About</A>\n      </Li>\n      <Li\n        color='#0DD269'>\n          <A href='#Projects' onClick={() => this.changeColor('#0DD269')}>Projects</A>\n      </Li>\n        <Li\n          color='#FF5F5F'>\n            <A href='#Cooking' onClick={() => this.changeColor('#FF5F5F')}>Cooking</A>\n        </Li>\n        <Li\n          color='#913CFF'>\n            <A href='#Contact' onClick={() => this.changeColor('#913CFF')}>Contact</A>\n        </Li>\n    </Nav>\n\n        </HeaderContainer>\n        </>\n    )\n  }\n}\n\nconst HeaderContainer = styled.div`\ndisplay: flex;\ntransition: background-color 1s ease;\ntransition: padding 1s ease;\njustify-content: space-between;\nalign-content: center;\nalign-items: center;\npadding: ${props => props.newHeaderColor === '' ? 0 : '20px'};\n  grid-area: 1 / 1 / 2 / -1;\n`\n\nconst HeaderBackground = styled.div`\n  grid-area: 1 / 1 / 2 / -1;\n  align-self: center;\n  width: 100%;\n  height: ${props => props.height};\n  background: ${props => props.background};\n`\n\nconst H1 = styled.h1`\n  padding: 10px;\n  transition: background-color 1s ease;\n  background: ${props => props.background};\n  margin:0px;\n  font-size: 20px;\n  cursor: pointer;\n`\n\nconst Nav = styled.nav`\ndisplay: flex;\nheight: 100%;\n`\n\nconst Li = styled.li`\n  @import url('https://fonts.googleapis.com/css?family=Oswald');\n  font-family: Oswald;\n  display: inline;\n  transition: height 1s ease;\n  padding: 22px 10px 21px;\n  align-self: center;\n  text-transform: uppercase;\n`\nconst A = styled.a`\ncolor: white;\n  height: 100%;\ntext-decoration: none;\n`","import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport { Spring } from 'react-spring/renderprops';\n\nexport default class Body extends Component {\n  render() {\n    return (\n      \n        <Spring\n          from={{ position: '-500px', opacity: 0 }}\n          to={{position: '0', opacity: 1}}\n        >\n          {props => (\n          <BodyContainer\n            position={props.position}\n            opacity={props.opacity}\n          >\n            <H1>I am Joseph Pilla</H1>\n            <P>A full stack web developer</P>\n          </BodyContainer>\n          )\n          }\n        </Spring>\n    )\n  }\n}\n\nconst BodyContainer = styled.div`\n  margin-top: ${props => props.position}\n  opacity: ${props => props.opacity}\n  position: relative;\n  padding: 0 20% 30%;\n  display: flex; \n  flex-direction: column;\n  align-self: center;\n  grid-area: 2 / 1 / 3 / -1;\n`\nconst H1 = styled.h1`\n  @import url('https://fonts.googleapis.com/css?family=Roboto');\n  font-family: Roboto;\n font-size: 3rem;\n`\n\nconst P = styled.p`\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans');\n  font-family: Open Sans;\n  margin: 0px;\n`\n","import React, { Component } from 'react'\nimport styled from 'styled-components';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <FooterContainer>\n        <nav>\n          <Li color='#3b5998'><A href='https://www.facebook.com/joey.pilla'>Facebook</A></Li>\n          <Li color='#6cc644'><A href='https://github.com/JoeyPilla'>Github</A></Li>\n          <Li color='#833AB4'><A href='https://www.instagram.com/joey_pilla6/'>Instagram</A></Li>\n        </nav>\n      </FooterContainer>\n    )\n  }\n}\n\nconst FooterContainer = styled.div`\n  grid-area: 3 / 1 / 4 / -1;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  padding: 20px;\n`\n\nconst Li = styled.li`\n  background: ${props => props.color}\n  display: inline;\n  padding: 10px;\n`\n\nconst A = styled.a`\ncolor: white;\ntext-decoration: none;\n`","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport background from './background.jpg';\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <AppContainer>\n          <Header />\n          <Body />\n          <Footer />\n          <Background src={background} />\n          <Overlay/>\n        </AppContainer>\n      </>\n    );\n  }\n}\n\nconst AppContainer = styled.div`\n  display: grid;\n  color: white;\n  grid-template: 75px 1fr 50px / auto;\n  height: 100vh;\n  width: 100vw;\n`\n\nconst Background = styled.img`\n  grid-area: 1 / 1 / -1 / -1;\n  height: 100%;\n  width: 100%;\n  filter: contrast(1);\n  z-index: -2;\n  object-fit: cover;\n`\nconst Overlay = styled.div`\n  grid-area: 1 / 1 / -1 / -1;\n  height: 100%;\n  width: 100%;\n  opacity: .7;\nbackground-color: black;\n  z-index: -1;\n`\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}